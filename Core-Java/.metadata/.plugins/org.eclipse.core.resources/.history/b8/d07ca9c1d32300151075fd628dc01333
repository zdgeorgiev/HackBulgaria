import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class KMin {

    private Heap<Integer> maxHeap = new Heap<>(new Comparator<Integer>() {
        @Override
        public int compare(Integer o1, Integer o2) {
            return o1.compareTo(o2);
        }
    });

    // Finds the k-th minimum element in an unsorted collection.
    public int kthMinimum(List<Integer> numbers, int k) {

        return this.maxHeap.pop();
    }

    public static void main(String[] args) throws IOException {
        KMin kmin = new KMin();

        BufferedReader bi = new BufferedReader(new InputStreamReader(System.in));
        String line;

        String[] rawData = bi.readLine().split(" ");
        int n = Integer.parseInt(rawData[0]);
        int k = Integer.parseInt(rawData[1]);

        ArrayList<Integer> list = new ArrayList<Integer>();

        for (String numStr : bi.readLine().split(" "))
            list.add(Integer.parseInt(numStr));

        System.out.println(kmin.kthMinimum(list, k));
    }
}