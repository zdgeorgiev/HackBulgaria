package statistics;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;

public class StatisticImpl implements Statistic {
    private ArrayList<Integer> arr;

    public StatisticImpl() {
        this.arr = new ArrayList<Integer>();
    }

    public void addNumber(int number) {
        this.arr.add(number);
    }

    public float getMean() {
        float mean = 0;

        for (Integer i : this.arr) {
            mean += i;
        }

        return mean;
    }

    public int getMedian() {
        Collections.sort(this.arr);
        int rightNumberIndex = this.arr.size() / 2;
        int leftNumberIndex = this.arr.size() / 2 - 1;
        
        boolean isEven = false;
        if ((this.arr.size() & 1) == 0) {
            isEven = true;
        }

        float median = 0;
        int index = 0;
        for (Integer i : this.arr) {
            if(index == leftNumberIndex && isEven) {
                median += i;
            } else  if (index == rightNumberIndex) {
                median += i;
            }

            index++;
        }

        //if the collections have even size find the 
        if ((this.arr.size() & 1) == 0) {
            int leftNumber = 

            return (leftNumber + rightNumber) / 2;
        } else {
            return this.arr.indexOf(this.arr.size() / 2);
        }
    }

    public HashSet<Integer> getMode() {
        // TODO Auto-generated method stub
        return null;
    }

    public int getRange() {
        // TODO Auto-generated method stub
        return 0;
    }
}