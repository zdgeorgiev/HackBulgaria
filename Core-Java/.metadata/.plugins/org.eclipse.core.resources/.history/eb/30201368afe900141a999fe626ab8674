package crawler;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Program {
    private static String domain = null;
    private static ArrayList<URL> visited = new ArrayList<URL>();

    public static void main(String[] args) {
        try {
            String website = "http://www.eurofootball.bg/new_program.php?sport_id=447&search_form=true";
            domain = website;
            URL url = new URL(website);
            System.out.println(url);
            String needle = "8.05";
            System.out.println("Fount at - " + Search(url, needle));

        } catch (MalformedURLException e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }

    private static URL Search(URL url, String needle) throws IOException {
        visited.add(url);
        BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));

        StringBuilder content = new StringBuilder();
        String inputLine;

        ArrayList<String> temp = new ArrayList<String>();

        while ((inputLine = in.readLine()) != null) {
            content.append(inputLine);
            temp.add(inputLine);
        }

        in.close();

        String contentAsString = content.toString();

        File f = new File("hm.html");
        Files.write(Paths.get("hm.html"), temp, StandardCharsets.UTF_8);

        if (contentAsString.contains(needle)) {
            System.out.println("Found ! - " + url.toString());
            return url;
        }

        ArrayList<String> links = getAllLinks(contentAsString);

        for (String next : links) {
            if (next.contains("http")) {
                continue;
            }

            if (next.contains("/")) {
                next = next.substring(next.lastIndexOf("/") + 1);
            }

            URL nextUrl = new URL(domain + "/" + next);

            if (!visited.contains(nextUrl)) {
                System.out.println("Next - " + nextUrl);
                Search(nextUrl, needle);
            }
        }

        return null;
    }

    private static ArrayList<String> getAllLinks(String url) {
        ArrayList<String> resultList = new ArrayList<>();
        String regex = "<a.*?href=\"((?!javascript).*?)\".*?>";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(url);

        while (matcher.find()) {
            resultList.add(matcher.group(1));
        }

        return resultList;
    }
}