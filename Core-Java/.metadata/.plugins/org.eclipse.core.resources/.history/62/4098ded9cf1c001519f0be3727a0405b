import java.util.ArrayList;
import java.util.List;

public class KLists {

    private Heap heap;

    public class Node {
        public int value;
        public Node next;
    }

    // Merge K sorted lists.
    public Node merge(List<Node> lists) {

        for (int i = 0; i < lists.size(); i++) {
            Node head = lists.get(i);

            ArrayList<Integer> currentList = new ArrayList<Integer>();

            while (head != null) {
                currentList.add(head.value);
                head = head.next;
            }

            if (i == 0) {
                this.heap = new Heap(currentList);
            } else {
                for (Integer number : currentList) {
                    this.heap.add(number);
                }
            }
        }

        this.heap.sort();

        KLists.Node head = new KLists.Node();

        for (int i = 0; i < this.heap.getData().size() - 1; i++) {
            KLists.Node currentNode = new KLists.Node();
            KLists.Node nextNode = new KLists.Node();

            currentNode.value = this.heap.getData().get(i);

            if(i == 0) {
                head = currentNode;
            }
            
            if (i == this.heap.getData().size() - 1) {
                currentNode.next = null;
            } else {
                currentNode.next = nextNode;
            }

        }

        return null;
    }
}
