import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class ClosestCoffeeStore {

    private boolean isFound = false;
    private List<Integer> visited = new ArrayList<Integer>();

    // Finds the closest coffee store to a point.
    public int closestCoffeeStore(boolean[][] graph, boolean[] isCoffeStore, int startingPoint) {
        return -1;
    }

    public void BFS(int currentCoffeIndex, boolean[][] graph) {

        int stepsCount = 0;

        Queue queue = new LinkedList();
        queue.add(currentCoffeIndex);
        visited.add(currentCoffeIndex);

        while (!queue.isEmpty()) {
            for (int i = 0; i < graph[currentCoffeIndex].length; i++) {
                if (graph[currentCoffeIndex][i]) {
                    queue.add(i);
                }
            }
        }
    }
}
