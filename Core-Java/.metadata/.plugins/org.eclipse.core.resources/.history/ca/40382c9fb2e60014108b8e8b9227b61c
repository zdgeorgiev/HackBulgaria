package textCompression;

import static org.junit.Assert.assertEquals;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.junit.Test;

import readAndWriteUtils.FileUtils;

public class UtilsTests {

    @Test
    public void testCompression() {
        Path source = Paths.get("../testData/testData/compressThis.txt");
        Path destination = Paths.get("../testData/testData/compressed.txt");

        try {
            Utils.compressFile(source, destination);

            String actual = FileUtils.getInstance().readFrom(destination.toFile());
            String expected = "~0 ~0 ~0 ~1 ~2 ~0 ~0 ~0.|buffalo,rides,a";

            assertEquals(actual.equals(expected), true);
        } catch (IOException e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }

    @Test
    public void testWithTempFile() {
        File source = new File("../testData/testData/compressThis.txt");
        File destination = new File("../testData/testData/compressedTemp.txt");

        try {
            Utils.compressFile(source.toPath(), destination.toPath());

            String actual = FileUtils.getInstance().readFrom(destination);
            String expected = "~0 ~0 ~0 ~1 ~2 ~0 ~0 ~0.|buffalo,rides,a";

            source.delete();
            destination.delete();
            
            assertEquals(actual.equals(expected), true);
        } catch (IOException e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
}