public class BandwidthManager {

    private PriorityQueue pq;

    public BandwidthManager() {
        this.pq = new PriorityQueue();
    }

    // receives a packet with specified protocol and payload
    public void rcv(String protocol, String payload) {
        Packet p = null;

        switch (protocol) {
            case "ICMP":
                p = Packet.ICMP;
                break;
            case "UDP":
                p = Packet.UDP;
                break;
            case "RTM":
                p = Packet.RTM;
                break;
            case "IGMP":
                p = Packet.IGMP;
                break;
            case "DNS":
                p = Packet.DNS;
                break;
            case "TCP":
                p = Packet.TCP;
                break;

            default:
                throw new IllegalArgumentException("Invalid protocol");
        }

        p.setContent(payload);
        
        this.pq.push(p);
    }

    // returns the payload of the packet which should be sent
    public String send() {
        return null;

    }
}