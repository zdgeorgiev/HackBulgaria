import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BuildScripts {

    public static Map<Integer, String> projects = new HashMap<>();
    public static List<String> sorted = new ArrayList<String>();
    public static int[] visited;
    public static int[] tempVisited;

    public static void main(String[] args) {

        int[][] graph = new int[][] { { 0, 0, 1, 1, 1 }, { 1, 0, 1, 1, 1 }, { 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0 },
                { 0, 0, 1, 1, 0 } };

        projects.put(0, "Extensions");
        projects.put(1, "Interface");
        projects.put(2, "Core");
        projects.put(3, "Common");
        projects.put(4, "Networking");

        visited = new int[graph[0].length];
        tempVisited = new int[graph[0].length];

        topologicalSort(graph, 1);
        System.out.println(sorted);
    }

    private static void topologicalSort(int[][] graph, int startNode) {

        for (int i = 1; i < graph[0].length; i++) {
            if (visited[i] == 0) {
                visit(graph, startNode);
            }
        }
    }

    private static void visit(int[][] graph, int node) {
        if (tempVisited[node] == 1) {
            return;
        }

        if (visited[node] == 0) {
            tempVisited[node] = 1;

            for (int i = 0; i < graph[node].length; i++) {

                if (graph[node][i] == 1) {
                    visit(graph, i);
                }
            }

            visited[node] = 1;
            tempVisited[node] = 0;
            sorted.add(projects.get(node));
        }
    }
}
