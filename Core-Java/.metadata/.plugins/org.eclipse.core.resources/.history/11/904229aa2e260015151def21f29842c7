import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class BuildScripts {

    public static Map<Integer, String> projects = new HashMap<>();
    public static List<String> sorted = new ArrayList<String>();
    public static int[] visited;
    public static int[] tempVisited;

    public static void main(String[] args) {

        Scanner s = new Scanner(System.in);
        int n = s.nextInt();

        for (int i = 0; i < n; i++) {
            projects.put(projects.size(), s.next());
        }

        int startingIndex = projects.get(s.next());

        List<ArrayList<Integer>> graph = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> s = new ArrayList<Integer>();

        visited = new int[projects.size()];
        tempVisited = new int[projects.size()];

        topologicalSort(graph, startingIndex);
        System.out.println(sorted);
    }

    private static void topologicalSort(List<ArrayList<Integer>> graph, int startNode) {

        visit(graph, startNode);
    }

    private static void visit(List<ArrayList<Integer>> graph, int node) {
        if (tempVisited[node] == 1) {
            return;
        }

        if (visited[node] == 0) {
            tempVisited[node] = 1;

            for (int i = 0; i < graph.get(node).size(); i++) {

                int nextNodeIndex = graph.get(node).get(i);

                if (visited[nextNodeIndex] == 0) {
                    visit(graph, nextNodeIndex);
                }
            }
        }

        visited[node] = 1;
        tempVisited[node] = 0;
        sorted.add(projects.get(node));
    }
}
