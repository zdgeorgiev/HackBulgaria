import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class ValidDirectories {

    private ArrayList<Integer> visited = new ArrayList<Integer>();

    public boolean isValid(int[][] graph) {

        for (int i = 0; i < graph[0].length; i++) {
            if (graph[i][i] == 1) {
                return false;
            }
        }

        Queue<Integer> queue = new LinkedList<Integer>();

        queue.add(0);

        while (!queue.isEmpty()) {

            int currentIndex = queue.poll();

            for (int i = 0; i < graph[currentIndex].length; i++) {

                if (!this.visited.contains(graph[currentIndex][i])) {
                    if (graph[currentIndex][i] == 1) {
                        queue.add(i);
                        this.visited.add(i);
                    }
                } else {
                    return false;
                }
            }
        }

        return true;
    }
    
    public static void main(String[] agrs) {
        ValidDirectories v = new ValidDirectories();
        int[][] graph = new int[][] {};
        v.isValid(graph);
    }
}
