package duplicatesInSets;

import java.util.HashSet;
import java.util.Set;

public class Program {

    public static void main(String[] args) {
        Set<Integer> first = new HashSet<Integer>();
        Set<Integer> second = new HashSet<Integer>();
        Set<Integer> third = new HashSet<Integer>();

    }

    public static HashSet<Integer> duplicatesItems(HashSet<Integer>... hashSets) {
        int hashSetsCount = 0;
        int minSize = Integer.MAX_VALUE;
        HashSet<Integer> shortest = null;

        for (HashSet<Integer> hashSet : hashSets) {
            if (hashSet.size() < minSize) {
                minSize = hashSet.size();
                shortest = hashSet;
            }
            
            hashSetsCount++;
        }
        
        HashSet<Integer> duplicates = new HashSet<Integer>();

        for (Integer numb : shortest) {
            int occurs = 0;
            
            for (HashSet<Integer> hashSet : hashSets) {
                if(hashSet == shortest) {
                    continue;
                }

                for (Integer otherNumb : hashSet) {
                    if(numb == otherNumb) {
                        break;
                    }
                }
            }
            
            if(occurs == hashSetsCount) {
                duplicates.add(numb);
            }
        }
        
        return duplicates;
    }
}