import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BuildScripts {

    public static Map<String, Integer> projects = new HashMap<>();
    public static List<String> sorted = new ArrayList<String>();
    public static int[] visited;
    public static int[] tempVisited;

    public static void main(String[] args) {

        int[][] graph = new int[][] {};

        visited = new int[graph[0].length];
        tempVisited = new int[graph[0].length];

        topologicalSort(graph, projects.get("Interface"));
        System.out.println(sorted);
    }

    private static void topologicalSort(int[][] graph, int startNode) {

        if (!visited.contains(startNode)) {
            visited.add(startNode);
        }

        visit(graph, startNode);
    }

    private static void visit(int[][] graph, int node) {
        if (tempVisited.contains(node)) {
            return;
        }

        if (!visited.contains(node)) {
            tempVisited.add(node);

            for (int i = 0; i < graph[node].length; i++) {
                
                if(graph[node][i] == 1) {
                    visit(graph, i);
                }
            }
            
            visited[node] = 1;
            tempVisited[node] = 0;
            unmark n temporarily
            add n to head of L
        }
    }
}
