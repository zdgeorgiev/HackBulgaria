package birthdayRanges;

import java.util.ArrayList;
import java.util.List;

import javafx.util.Pair;

public class BirthdayUtils {

    public static ArrayList<Pair<ArrayList<Integer>, Integer>> birthdayCount(ArrayList<Integer> birthdays,
            ArrayList<Pair<Integer, Integer>> ranges) {

        // CountSort.sort(birthdays);

        return null;
    }

    public static int countInRange(List<Integer> birthdays, List<Integer> range) {

        int upperBound = binarySearch(birthdays, range.get(1) + 1);
        int lowerBound = binarySearch(birthdays, range.get(0));

        return upperBound - lowerBound + 1;
    }

    private static int binarySearch(List<Integer> birthdays, int number) {

        int low = 0;
        int high = birthdays.size() - 1;

        int middle = low + ((high - low) / 2);

        int searchedIndex = -1;

        while (low <= high) {

            if (birthdays.get(middle) <= number) {

            } else if (birthdays.get(middle) > number) {

            }
        }

        if (searchedIndex == -1) {
            return low;
        }

        return searchedIndex;
    }
}
