import java.util.Scanner;

public class MaxBanana {

    private static int[][] jungle;
    private static int[][] maxBananas;

    private static int[][] directions = new int[][] { { 0, -1 }, { 1, 0 } };

    public static void main(String[] args) {

        Scanner s = new Scanner(System.in);

        int n = s.nextInt();
        // int n = 70;

        jungle = new int[n][n];
        maxBananas = new int[n][n];

        for (int i = 0; i < jungle.length; i++) {
            for (int j = 0; j < jungle[0].length; j++) {
                jungle[i][j] = s.nextInt();
                // jungle[i][j] = new Random().nextInt(1001);
            }
        }

        getMaxBananas();
        System.out.println(maxBananas[n - 1][0]);
    }

    private static void getMaxBananas() {

        int startingRow = 0;
        int startingCol = jungle.length - 1;

        fillCell(startingRow, startingCol, 0);
    }

    private static void fillCell(int row, int col, int prevValue) {

        int currentBananas = jungle[row][col];

        if (currentBananas + prevValue > maxBananas[row][col]) {

            maxBananas[row][col] = currentBananas + prevValue;

            for (int i = 0; i < directions.length; i++) {
                int nextRow = row + directions[i][0];
                int nextCol = col + directions[i][1];

                if (isValidCell(nextRow, nextCol)) {
                    fillCell(nextRow, nextCol, maxBananas[row][col]);
                }
            }
        } else {
            int a;
            
            System.out.println("a");
        }

    }

    private static boolean isValidCell(int x, int y) {
        return ((x >= 0 && x < jungle.length) && (y >= 0 && y < jungle[0].length));
    }
}
