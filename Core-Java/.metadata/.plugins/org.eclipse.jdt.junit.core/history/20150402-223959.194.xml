<?xml version="1.0" encoding="UTF-8"?><testrun name="CalculatorTest" project="week1 OOP" tests="11" started="2" failures="0" errors="2" ignored="0">
  <testsuite name="calculator.CalculatorTest" incomplete="true">
    <testcase name="testRPN" classname="calculator.CalculatorTest" time="10.787">
      <error>java.lang.OutOfMemoryError: Java heap space&#13;
	at java.util.Arrays.copyOf(Unknown Source)&#13;
	at java.lang.AbstractStringBuilder.expandCapacity(Unknown Source)&#13;
	at java.lang.AbstractStringBuilder.ensureCapacityInternal(Unknown Source)&#13;
	at java.lang.AbstractStringBuilder.append(Unknown Source)&#13;
	at java.lang.StringBuilder.append(Unknown Source)&#13;
	at calculator.Calculator.convertToRPN(Calculator.java:79)&#13;
	at calculator.Calculator.setExpression(Calculator.java:137)&#13;
	at calculator.CalculatorTest.testRPN(CalculatorTest.java:18)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSimpleAddition" classname="calculator.CalculatorTest" time="10.223">
      <error>java.lang.OutOfMemoryError: Java heap space&#13;
	at java.util.Arrays.copyOf(Unknown Source)&#13;
	at java.lang.AbstractStringBuilder.expandCapacity(Unknown Source)&#13;
	at java.lang.AbstractStringBuilder.ensureCapacityInternal(Unknown Source)&#13;
	at java.lang.AbstractStringBuilder.append(Unknown Source)&#13;
	at java.lang.StringBuilder.append(Unknown Source)&#13;
	at calculator.Calculator.convertToRPN(Calculator.java:79)&#13;
	at calculator.Calculator.setExpression(Calculator.java:137)&#13;
	at calculator.CalculatorTest.testSimpleAddition(CalculatorTest.java:48)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testPower" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testRPN2" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testRPN3" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testRPN4" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testAnotherCase" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testFactorial" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testNestedExpression" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testHardest" classname="calculator.CalculatorTest" incomplete="true"/>
    <testcase name="testPowerHard" classname="calculator.CalculatorTest" incomplete="true"/>
  </testsuite>
</testrun>
